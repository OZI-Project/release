name: OZI Release
description: "OZI release draft action."
branding:
  icon: 'package'
  color: 'orange'
inputs:
  python-dist:
    description: "python dist version string e.g. security1, security2, bugfix, prerelease"
    required: true
  github-token:
    description: "GitHub workflow-generated token"
    required: false
    default: ${{ github.token }}
  freethreaded:
    description: "enable freethreaded python builds when applicable (Python >= 3.13)"
    default: false
  wheel-sign-token:
    description: "Token to sign wheel RECORD.jws with."
    required: true
    default: ""
  run-sigstore:
    default: false
  ozi-internal:
    default: false
outputs:
  hashes:
    description: "release file hashes in base64 for provenance"
    value: ${{ steps.hash.outputs.hashes }}
runs:
  using: "composite"
  steps:
  - id: final-job-index
    env: 
      JOB_TOTAL: ${{ strategy.job-total }}
    run: echo "value=$(($JOB_TOTAL-1))" >> GITHUB_OUTPUT
    shell: bash

  - id: penultimate-job-index
    env: 
      JOB_TOTAL: ${{ strategy.job-total }}
    run: echo "value=$(($JOB_TOTAL-2))" >> GITHUB_OUTPUT
    shell: bash

  - name: Get OZI spec API python-version
    id: api
    env:
      PY_DIST: ${{ inputs.python-dist }}
    run: |
      arr=('security2' 'security1' 'bugfix' 'prerelease')
      if printf '%s\n' "${arr[@]}" | grep -qx "$PY_DIST"; then       
          echo "python-version=$( curl -L https://oziproject.dev/api.json | jq --arg V "$PY_DIST" -c -r '.spec.python.support[$V]' )" >> $GITHUB_OUTPUT
      else
          echo "python-version=$PY_DIST" >> $GITHUB_OUTPUT
      fi
    shell: bash

  - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093

  - run: cp -a artifact/. ./
    shell: bash

  - name: Set up Python ${{ steps.api.outputs.python-version }}
    uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
    with:
      cache: 'pip'
      python-version: ${{ steps.api.outputs.python-version }}
      allow-prereleases: true
      check-latest: true
      freethreaded: ${{ fromJSON(inputs.freethreaded) }}

  - name: Install build dependencies
    run: |
        python -m pip install pip==24.3.1
        python -m pip install --upgrade pipx
        python -m pip install --upgrade tox
        python -m pip install --upgrade invoke
    shell: bash

  - name: run pipx ensurepath
    continue-on-error: true
    run: pipx ensurepath
    shell: bash

  - name: Configure git repository
    if: strategy.job-index == 0
    run: |
        git config --global user.email "noreply@oziproject.dev"
        git config --global user.name "OZI Packaging"
        rm -rf .git/COMMIT_EDITMSG
    shell: bash

  - name: Hide README.rst symlink from SCM
    continue-on-error: true
    run: |
        git update-index --skip-worktree README.rst
    shell: bash

  - name: Hiding README.md symlink from SCM
    continue-on-error: true
    run: |
        git update-index --skip-worktree README.md
    shell: bash

  - name: Hide README.txt symlink from SCM
    continue-on-error: true
    run: |
        git update-index --skip-worktree README.txt
    shell: bash

  - name: Hide subprojects/ozi symlink from SCM
    continue-on-error: true
    run: |
        git update-index --skip-worktree subprojects/ozi
    shell: bash

  - name: git diff
    run: git diff
    shell: bash

  - name: Setup tox invoke environment
    if: strategy.job-index == fromJSON(steps.final-job-index.outputs.value)
    run: tox -e invoke -- --list
    continue-on-error: true
    shell: bash

  - name: Setup tox invoke environment
    if: strategy.job-index != fromJSON(steps.final-job-index.outputs.value)
    run: tox -e invoke -- --list
    shell: bash

  - name: Build and sign wheel
    if: ${{ strategy.job-index != fromJSON(steps.penultimate-job-index.outputs.value) && strategy.job-index != fromJSON(steps.final-job-index.outputs.value) }}
    uses: OZI-Project/secure-release@1.1.1
    with:
      wheel-sign-token: ${{ inputs.wheel-sign-token }}
      ozi-internal: ${{ inputs.ozi-internal }}

  - name: Build and sign prerelease wheel if possible
    if: strategy.job-index == fromJSON(steps.final-job-index.outputs.value)
    continue-on-error: true
    uses: OZI-Project/secure-release@1.1.1
    with:
      wheel-sign-token: ${{ inputs.wheel-sign-token }}
      ozi-internal: ${{ inputs.ozi-internal }}

  - name: git diff
    run: git diff
    shell: bash

  - name: Build and sign sdist then wheel
    if: strategy.job-index == strategy.job-total
    id: sdist
    uses: OZI-Project/secure-release@1.1.1
    with:
      sdist: true
      wheel-sign-token: ${{ inputs.wheel-sign-token }}
      ozi-internal: ${{ inputs.ozi-internal }}

  - uses: sigstore/gh-action-sigstore-python@f7ad0af51a5648d09a20d00370f0a91c3bdf8f84
    if: strategy.job-index == fromJSON(steps.final-job-index.outputs.value) && inputs.run-sigstore == 'true'
    with:
      inputs: |
        dist/*.tar.gz
        dist/*.whl
      release-signing-artifacts: true
      upload-signing-artifacts: true

  - name: Move wheel signing files
    if: strategy.job-index == fromJSON(steps.final-job-index.outputs.value)
    run: |
      mkdir sig
      mv dist/*.whl.sigstore.json sig
      mv dist/*.tar.gz.sigstore.json sig
      rm -rf dist/*.dist-info
    shell: bash

  - name: Generate hashes for provenance
    shell: bash
    id: hash
    if: strategy.job-index == fromJSON(steps.final-job-index.outputs.value)
    run: |
      # sha256sum generates sha256 hash for all artifacts.
      # base64 -w0 encodes to base64 and outputs on a single line.
      # sha256sum artifact1 artifact2 ... | base64 -w0
      echo "hashes=$(sha256sum ./dist/* | base64 -w0)" >> $GITHUB_OUTPUT

  - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
    if: strategy.job-index == 0
    with:
      include-hidden-files: true
      path: |
        !*-checkpoint/
        !.git/config
        !signing-artifacts-*/
        !security2/
        !artifact/
        !build/
        ./

  - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
    if: strategy.job-index > 0
    with:
      include-hidden-files: true
      path: |
        !artifact/
        !build/
        ./

  - id: tag
    if: cancelled() || failure()
    run: echo "digest=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    shell: bash

  - name: Cleanup failed release and tag
    if: cancelled() || failure()
    run: gh release delete "$TAG_DIGEST" -y --cleanup-tag
    shell: bash
    env:
      TAG_DIGEST: ${{ steps.tag.outputs.digest }}
      GITHUB_TOKEN: ${{ github.token }}
